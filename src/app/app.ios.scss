
.button-ios {
  min-height: $button-ios-height
}

// Light buttons color.
.button-ios-light {
  color: color($colors, primary, base);
}

.col[align-self-stretch] .card-ios {
  height: calc(100% - #{($card-ios-margin-end + $card-ios-margin-start)});
}

.bar-buttons core-context-menu .button-clear-ios {
  color: $toolbar-ios-button-color;
}

.item-ios ion-spinner[item-start],
.item-ios ion-spinner[item-end] {
  @include margin($item-ios-padding-icon-top, null, $item-ios-padding-icon-bottom, 0);
}

@each $color-name, $color-base, $color-contrast in get-colors($colors-ios) {
  .ios .core-#{$color-name}-card {
    @extend .card-ios ;
    @extend .card-content-ios;

    &[icon-start] {
      padding-left: $card-ios-padding-left * 2 + 20;

      ion-icon {
        left: $card-ios-padding-left;
      }
    }
  }
}

.ios .core-avoid-header ion-content {
    top: $navbar-ios-height;
    height: calc(100% - #{($navbar-ios-height)});
}

.platform-cordova.ios .core-avoid-header ion-content.statusbar-padding,
.platform-cordova.ios .core-avoid-header .menu-inner > ion-content {
    top: $navbar-ios-height + $cordova-ios-statusbar-padding;
    height: calc(100% - #{($navbar-ios-height + $cordova-ios-statusbar-padding)});
}

.platform-cordova.ios .core-avoid-header .core-avoid-header .menu-inner > ion-content,
.platform-cordova.ios core-tab core-split-view .core-avoid-header .menu-inner > ion-content {
    top: 0;
    height: 100%;
}


// Highlights inside the input element.
@if ($core-text-input-ios-show-highlight) {
  .card-ios, .list-ios {
    // In order to get a 2px border we need to add an inset
    // box-shadow 1px (this is to avoid the div resizing)

    // The last item in a list has a border on the item, not the
    // inner item, so add it to the item itself
    .item-input.item-input-has-focus:last-child,
    .item-input.input-has-focus:last-child {
      @include ios-input-highlight($text-input-ios-highlight-color);

      .item-inner ion-input {
        box-shadow: none;
      }
    }

    // Show the focus highlight when the input has focus
    .item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child,
    .item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child {
      @include ios-input-highlight($text-input-ios-highlight-color-valid);

      .item-inner ion-input {
        box-shadow: none;
      }
    }

    .item-input.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child {
      @include ios-input-highlight($text-input-ios-highlight-color-invalid);

      .item-inner ion-input {
        box-shadow: none;
      }
    }
  }

  .item-ios.item-input {
    .item-inner {
      border: 0;
    }

    &.item-block .item-inner ion-input {
      border-bottom: $hairlines-width solid $list-border-color;
    }

    // TODO remove all uses of input-has-focus in v4
    &.item-input-has-focus .item-inner ion-input,
    &.input-has-focus .item-inner ion-input {
      @include ios-input-highlight($text-input-ios-highlight-color);
    }

    // Show the valid highlight when it has the .ng-valid class and a value
    &.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner ion-input,
    &.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner ion-input {
      @include ios-input-highlight($text-input-ios-highlight-color-valid);
    }

    // Show the invalid highlight when it has the invalid class and has been touched
    &.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner ion-input {
      @include ios-input-highlight($text-input-ios-highlight-color-invalid);
    }
  }
}

// Different levels of padding.
@for $i from 0 through 15 {
  .ios .core-padding-#{$i} {
    padding-left: 15px * $i + $item-ios-padding-start;
  }
}

// Recover borders on items inside cards.
.card-ios.with-borders  .item-ios.item-block .item-inner {
  border-bottom: $hairlines-width solid $list-ios-border-color;
}
.card-ios.with-borders .item-ios:last-child .item-inner {
  border-bottom: 0;
}